# Single-container Dockerfile for Coolify deployment
# Backend + Frontend + Nginx in one container with external MongoDB

FROM node:18-alpine as frontend-build

# Build frontend
WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm ci --only=production
COPY frontend/src ./src
COPY frontend/public ./public
COPY frontend/tsconfig.json ./
COPY frontend/.env* ./
ARG REACT_APP_API_URL=/api
ENV REACT_APP_API_URL=$REACT_APP_API_URL
RUN npm run build

# Main container with backend and nginx
FROM python:3.11-slim

# Install system dependencies (no MongoDB needed - using external)
RUN apt-get update && \
    apt-get install -y \
    curl \
    nginx \
    supervisor \
    build-essential && \
    rm -rf /var/lib/apt/lists/*

# Set up backend
WORKDIR /app
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
COPY backend/ ./

# Copy frontend build
COPY --from=frontend-build /app/frontend/build /var/www/html

# Copy configurations
COPY nginx.conf /etc/nginx/sites-available/default
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Create required directories (no MongoDB data dir needed)
RUN mkdir -p /var/log/supervisor /app/logs && \
    rm -f /etc/nginx/sites-enabled/default && \
    ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default

# Update nginx config for single container (backend on localhost:8000)
RUN sed -i 's/backend:8000/localhost:8000/g' /etc/nginx/sites-available/default

# Set environment variables for external MongoDB
ENV MONGODB_URI=mongodb://root:77T87Tjn62LDdS5Bq9bY52FGxDBdXfEmJS1cj69elnhQBsRj7BsAnr3SKQF77oot@fo8g4g0w8gcc8k44s8s4gsks:27017/?directConnection=true
ENV PYTHONUNBUFFERED=1

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# Expose port
EXPOSE 80

# Start all services with supervisor
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
